// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_cumema
NumericVector c_cumema(NumericVector& X, NumericVector& days, double theta);
RcppExport SEXP VSR_c_cumema(SEXP XSEXP, SEXP daysSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector& >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector& >::type days(daysSEXP );
        Rcpp::traits::input_parameter< double >::type theta(thetaSEXP );
        NumericVector __result = c_cumema(X, days, theta);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_ema
NumericVector c_ema(NumericVector& X, NumericVector& days, double theta);
RcppExport SEXP VSR_c_ema(SEXP XSEXP, SEXP daysSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector& >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector& >::type days(daysSEXP );
        Rcpp::traits::input_parameter< double >::type theta(thetaSEXP );
        NumericVector __result = c_ema(X, days, theta);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_ema_lin
NumericVector c_ema_lin(NumericVector& X, NumericVector& days, double theta);
RcppExport SEXP VSR_c_ema_lin(SEXP XSEXP, SEXP daysSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector& >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector& >::type days(daysSEXP );
        Rcpp::traits::input_parameter< double >::type theta(thetaSEXP );
        NumericVector __result = c_ema_lin(X, days, theta);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_ediversity
NumericVector c_ediversity(IntegerVector& X, int N, double theta);
RcppExport SEXP VSR_c_ediversity(SEXP XSEXP, SEXP NSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector& >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type N(NSEXP );
        Rcpp::traits::input_parameter< double >::type theta(thetaSEXP );
        NumericVector __result = c_ediversity(X, N, theta);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_cum_unique_count
IntegerVector c_cum_unique_count(IntegerVector& X, int N);
RcppExport SEXP VSR_c_cum_unique_count(SEXP XSEXP, SEXP NSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector& >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type N(NSEXP );
        IntegerVector __result = c_cum_unique_count(X, N);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
